on: push

permissions:
  contents: write
  pull-requests: write

name: Release

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
      patch: ${{ steps.release.outputs.patch }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: time-support-action
          token: ${{ github.token }}
          monorepo-tags: true

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.releases_created
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - run: npm ci
      - run: npm test
      - run: npm run bundle
      - run: npm prune --omit=dev
      - run: git switch -c release/new-version
      - run: git add -f *.js node_modules
      - run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
      - run: 'git commit -m "build: v${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }}.${{ needs.release.outputs.patch }} available"'
      - run: |
          git tag -f v${{ needs.release.outputs.major }} || true
          git tag -f v${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }} || true
          git tag -f v${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }}.${{ needs.release.outputs.patch }} || true
          git push origin -f v${{ needs.release.outputs.major }}
          git push origin -f v${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }}
          git push origin -f v${{ needs.release.outputs.major }}.${{ needs.release.outputs.minor }}.${{ needs.release.outputs.patch }}

